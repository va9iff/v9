.red{
	background-color: red !important;
}

*[centered]{
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;	
	gap: 0;
}

*[stretched]{
	display: flex;
	flex-direction: column;
}

v-network{
	--indent-width: 40px;
}

*[i],
*[i1],
*[i2],
*[i3],
*[i4],
*[i5]{
}

*[i], *[i1]{
	margin-left: calc(var(--indent-width) * 1);
}

*[i2]{
	margin-left: calc(var(--indent-width) * 2);
}

*[i3]{
	margin-left: calc(var(--indent-width) * 3);
}

*[i4]{
	margin-left: calc(var(--indent-width) * 4);
}

*[i5]{
	margin-left: calc(var(--indent-width) * 5);
}

[fadeInOpacity]{
	animation: fadeInOpacityAnim 300ms;
}
@keyframes fadeInOpacityAnim{
	from{
		opacity: 0;
	}
	to{
		opacity: 1;
	}
}

*[opacome]{
	opacity: 0;
	transition: 300ms;
}

.open *[opacome]{
	opacity: 1;
}

.close *[opacome]{
	transition: 400ms;
	opacity: 0;
}

/* !WARNING: !TODO: we use position: relative to bring .treeRow to front.
I couldn't figure out why the next elements were always on top of the previous
ones in my tree  */
/*oh nvm. utility.css was overwritten by mytree.css*/
*[ontop]{
/*	background-color: #f008;*/
	z-index: 99999999; 
	position: relative;
}

*[popin]{
	transform: scale(0);
	transform: 300ms;
}

.open *[popin]{
	transform: scale(1);
}

.close *[popin]{
	transform: scale(0);
}